pipeline {
    agent {
        docker {
            image 'python:3.8'
        }
    }
    environment {
        dockerImageName = 'django_from_jenkins'
    }
    stages {
        stage('Build') {
            steps {
                echo 'Building the Docker image'
                dir('django_web_app') {
                    sh 'docker build -t django_from_jenkins .'
                }
            }
        }

        stage('Testing the app') {
            steps {
                echo 'Running Django tests'
                sh 'docker run -d -p 8000:8000 --name django_from_jenkinss_container django_from_jenkins '

                dir('django_web_app') {
                    // Run the Django tests
                    // Check for a 200 (OK) response when trying to access the app
                    sh 'python manage.py test'

                    // Check for a 200 (OK) response when trying to access the app
                    script {
                        // Use the Jenkins HTTP Request plugin to check for a 200 response
                        def response = httpRequest(url: 'http://localhost:8000/', validResponseCodes: '200')
                        echo "HTTP response: ${response}"
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying...'
                // Add deployment steps here
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded! Send notifications or perform additional tasks here.'
        }
        failure {
            echo 'Pipeline failed! Send notifications or perform cleanup tasks here.'
        }
        always {
            // Remove the django_from_jenkinss_container by name
            sh 'docker rm -f django_from_jenkinss_container'
        }
    }
}
